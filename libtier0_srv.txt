U abort@@GLIBC_2.0
U access@@GLIBC_2.0
t add_fdes
d adds.7230
U alarm@@GLIBC_2.0
T AllocateThreadID
T ApproximateProcessMemoryUsage
T AreAllAssertsDisabled
U asctime@@GLIBC_2.0
U asctime_r@@GLIBC_2.0
T _AssertValidReadPtr
T _AssertValidReadWritePtr
T _AssertValidStringPtr
T _AssertValidWritePtr
t base_from_cb_data
t base_from_object
T BeginWatchdogTimer
A __bss_start
T CatchAndWriteMiniDump
T _CCallStackStatsGatherer_Internal_DumpStatsToFile
U chmod@@GLIBC_2.0
U chown@@GLIBC_2.1
t classify_object_over_fdes
U closedir@@GLIBC_2.0
T CommandLine
b completed.5517
T COM_TimestampedLog
T ConDMsg
T CrackSmokingCompiler
T CreateSimpleThread
U ctime_r@@GLIBC_2.0
d __CTOR_END__
d __CTOR_LIST__
U __ctype_tolower_loc@@GLIBC_2.3
U __cxa_allocate_exception@@CXXABI_1.3
U __cxa_atexit@@GLIBC_2.1.3
U __cxa_begin_catch@@CXXABI_1.3
U __cxa_end_catch@@CXXABI_1.3
w __cxa_finalize@@GLIBC_2.1.3
U __cxa_guard_abort@@CXXABI_1.3
U __cxa_guard_acquire@@CXXABI_1.3
U __cxa_guard_release@@CXXABI_1.3
U __cxa_pure_virtual@@CXXABI_1.3
U __cxa_rethrow@@CXXABI_1.3
U __cxa_throw@@CXXABI_1.3
U __daylight@@GLIBC_2.0
U daylight@@GLIBC_2.0
T DeclareCurrentThreadIsMainThread
T DecodeBinaryFromString
t __deregister_frame
t __deregister_frame_info
t __deregister_frame_info_bases
T DevMsg
T DevWarning
U dlclose@@GLIBC_2.0
U dl_iterate_phdr@@GLIBC_2.2.4
U dlopen@@GLIBC_2.1
U dlsym@@GLIBC_2.0
t __do_global_ctors_aux
t __do_global_dtors_aux
T DoNewAssertDialog
d __dso_handle
d __DTOR_END__
b dtor_idx.5519
d __DTOR_LIST__
b dwarf_reg_size_table
d DW.ref.__gxx_personality_v0
a _DYNAMIC
A _edata
T EncodeBinaryToString
A _end
T EndWatchdogTimer
U __errno_location@@GLIBC_2.0
T Error
T _Error_AlwaysSpewCallStack_Enable
T _Error_AlwaysSpewCallStack_Length
T Error_SpewCallStack
t execute_cfa_program
t execute_stack_op
U _exit@@GLIBC_2.0
T _ExitOnFatalAssert
U fclose@@GLIBC_2.1
t fde_mixed_encoding_compare
t fde_single_encoding_compare
t fde_unencoded_compare
U fgetc@@GLIBC_2.0
U fgets@@GLIBC_2.0
T _fini
U fopen64@@GLIBC_2.1
U fopen@@GLIBC_2.1
U fprintf@@GLIBC_2.0
t frame_downheap
t frame_dummy
r __FRAME_END__
b frame_hdr_cache
b frame_hdr_cache_head
t frame_heapsort
t __frame_state_for
U fread@@GLIBC_2.0
U free@@GLIBC_2.0
T FreeThreadID
U freopen@@GLIBC_2.0
U fscanf@@GLIBC_2.0
d g_AllocError
b g_bEnforceLoggingSystemSingleton
d g_bInitMemory
B g_ClockSpeed
b g_ClockSpeedInit
B g_ClockSpeedMicrosecondsMultiplier
B g_ClockSpeedMillisecondsMultiplier
B g_ClockSpeedSecondsMultiplier
B g_dwClockSpeed
T GetCallStack
T GetCallStack_Fast
t get_cie_encoding
T GetCPUInformation
T GetCurrentDayOfTheWeek
T GetCurrentDayOfTheYear
U getenv@@GLIBC_2.0
t get_fde_encoding
T GetFileAndLineFromAddress
T GetModuleNameFromAddress
U getppid@@GLIBC_2.0
T GetSymbolNameFromAddress
T GetThreadedLoadLibraryFunc
U gettimeofday@@GLIBC_2.0
T GetUnitTest
T GetVAtom
a _GLOBAL_OFFSET_TABLE_
t _GLOBAL__sub_I.00101_memstd.cpp
t _GLOBAL__sub_I_assert_dialog.cpp
t _GLOBAL__sub_I_commandline.cpp
t _GLOBAL__sub_I_cpu.cpp
t _GLOBAL__sub_I_cputopology.cpp
t _GLOBAL__sub_I_dbg.cpp
t _GLOBAL__sub_I_dynfunction.cpp
t _GLOBAL__sub_I_fasttimer.cpp
t _GLOBAL__sub_I_logging.cpp
t _GLOBAL__sub_I_mem.cpp
t _GLOBAL__sub_I_memdbg.cpp
t _GLOBAL__sub_I_mem_helpers.cpp
t _GLOBAL__sub_I_memstd.cpp
t _GLOBAL__sub_I_memvalidate.cpp
t _GLOBAL__sub_I_memvirt.cpp
t _GLOBAL__sub_I_minidump.cpp
t _GLOBAL__sub_I_miniprofiler.cpp
t _GLOBAL__sub_I_platform_independent.cpp
t _GLOBAL__sub_I_platform_posix.cpp
t _GLOBAL__sub_I_platwindow.cpp
t _GLOBAL__sub_I_pme_posix.cpp
t _GLOBAL__sub_I_progressbar.cpp
t _GLOBAL__sub_I_security.cpp
t _GLOBAL__sub_I_stackstats.cpp
t _GLOBAL__sub_I_stacktools.cpp
t _GLOBAL__sub_I_systeminformation.cpp
t _GLOBAL__sub_I_threadtools.cpp
t _GLOBAL__sub_I_tier0_strtools.cpp
t _GLOBAL__sub_I_tslist.cpp
t _GLOBAL__sub_I_unitlib.cpp
t _GLOBAL__sub_I_vatoms.cpp
t _GLOBAL__sub_I_vprof.cpp
w __gmon_start__
U gmtime@@GLIBC_2.0
U gmtime_r@@GLIBC_2.0
B g_nMiniProfilerFrame
B g_nThreadID
b g_nThreadLocalStateIndex
b g_pCurThread
b g_pGlobalLoggingSystem
D g_pLastMiniProfiler
D g_pMemAlloc
B g_pOtherMiniProfilers
B g_pPhysicsMiniProfilers
b g_pStartNode
b g_pszSumNode
b g_rootMiniProfiler
b g_ThreadMainThreadID
b g_TimesLessChildren
b g_TimeSums
b g_TimeSumsMap
b g_TotalFrames
B g_VProfCurrentProfile
B g_VProfSignalSpike
U __gxx_personality_v0@@CXXABI_1.3
t __i686.get_pc_thunk.bx
t __i686.get_pc_thunk.cx
T _init
t init_dwarf_reg_size_table
T InitPME
T InstallProgressReportHandler
T Is64BitOS
d __JCR_END__
d __JCR_LIST__
w _Jv_RegisterClasses
t .L17
t .L19
t .L20
t .L214
t .L215
t .L216
t .L217
t .L218
t .L219
t .L220
t .L221
t .L222
t .L223
t .L224
t .L225
t .L226
t .L227
t .L228
t .L229
t .L23
t .L230
t .L24
t .L244
t .L25
t .L26
t .L271
t .L272
t .L273
t .L274
t .L275
t .L43
t .L45
t .L46
t .L47
t .L47
t .L48
t .L48
t .L49
t .L50
t .L51
t .L51
t .L52
t .L52
t .L53
t .L53
t .L54
t .L54
t .L55
t .L56
t .L57
t .L58
t .L59
t .L60
t .L61
t .L62
t .L63
t .L64
t .L65
t .L66
t .L67
t .L68
t .L69
t .L70
t .L71
U lchown@@GLIBC_2.0
t linear_search_fdes
U link@@GLIBC_2.0
U localtime@@GLIBC_2.0
U localtime_r@@GLIBC_2.0
b LOG_ASSERT
b LOG_CONSOLE
b LOG_DEVELOPER
b LOG_DEVELOPER_CONSOLE
b LOG_DEVELOPER_VERBOSE
b LOG_GENERAL
T LoggingSystem_AddTagToCurrentChannel
T LoggingSystem_FindChannel
T LoggingSystem_GetChannel
T LoggingSystem_GetChannelColor
T LoggingSystem_GetChannelCount
T LoggingSystem_GetChannelFlags
T LoggingSystem_GetFirstChannelID
T LoggingSystem_GetNextChannelID
T LoggingSystem_HasTag
T LoggingSystem_IsChannelEnabled
T LoggingSystem_Log
T LoggingSystem_LogAssert
T LoggingSystem_LogDirect
T LoggingSystem_PopLoggingState
T LoggingSystem_PushLoggingState
T LoggingSystem_RegisterLoggingChannel
T LoggingSystem_RegisterLoggingListener
T LoggingSystem_ResetCurrentLoggingState
T LoggingSystem_SetChannelColor
T LoggingSystem_SetChannelFlags
T LoggingSystem_SetChannelSpewLevel
T LoggingSystem_SetChannelSpewLevelByName
T LoggingSystem_SetChannelSpewLevelByTag
T LoggingSystem_SetGlobalSpewLevel
T LoggingSystem_SetLoggingResponsePolicy
b LOG_LOADING
t lstat
t __lstat
U __lxstat64@@GLIBC_2.2
U __lxstat@@GLIBC_2.0
U malloc@@GLIBC_2.0
U malloc_usable_size@@GLIBC_2.0
b marker.6968
T MemAllocScratch
U memcpy@@GLIBC_2.0
T MemFreeScratch
U memmove@@GLIBC_2.0
U memset@@GLIBC_2.0
U mkdir@@GLIBC_2.0
U mkfifo@@GLIBC_2.0
t mknod
t __mknod
U mount@@GLIBC_2.0
T Msg
b object_mutex
b once_regsizes.7403
U open64@@GLIBC_2.2
U opendir@@GLIBC_2.0
U open@@GLIBC_2.0
U pclose@@GLIBC_2.1
T Plat_Alloc
T Plat_ConvertToLocalTime
T Plat_CreateWindow
T Plat_daylight
T Plat_DefaultAllocErrorFn
T Plat_ExitProcess
T Plat_FastVerifyHardwareKey
T Plat_FloatTime
T Platform_gmtime
T Plat_Free
T Plat_GetClockStart
T Plat_GetCommandLine
T Plat_GetDesktopResolution
T Plat_GetLocalTime
T Plat_GetMemPageSize
T Plat_GetPagedPoolInfo
T Plat_GetShellWindow
T Plat_GetTimeString
T Plat_GetWindowClientSize
T Plat_IsInBenchmarkMode
T Plat_IsInDebugSession
T Plat_IsWindowMinimized
T Plat_MSTime
T Plat_Realloc
T Plat_ScreenToWindowCoords
T Plat_SetAllocErrorFn
T Plat_SetBenchmarkMode
T Plat_SetCommandLine
T Plat_SetCommandLineArgs
T Plat_SetWindowPos
T Plat_SetWindowTitle
T Plat_SimpleLog
T Plat_timegm
T Plat_timezone
T Plat_VerifyHardwareKey
T Plat_VerifyHardwareKeyDriver
T Plat_VerifyHardwareKeyPrompt
T Plat_WindowToScreenCoords
U popen@@GLIBC_2.1
U printf@@GLIBC_2.0
U pthread_attr_init@@GLIBC_2.1
U pthread_attr_setstacksize@@GLIBC_2.1
w pthread_cancel@@GLIBC_2.0
U pthread_cond_destroy@@GLIBC_2.3.2
U pthread_cond_init@@GLIBC_2.3.2
U pthread_cond_signal@@GLIBC_2.3.2
U pthread_cond_timedwait@@GLIBC_2.3.2
U pthread_create@@GLIBC_2.1
U pthread_getschedparam@@GLIBC_2.0
U pthread_join@@GLIBC_2.0
U pthread_kill@@GLIBC_2.0
U pthread_mutexattr_destroy@@GLIBC_2.0
U pthread_mutexattr_init@@GLIBC_2.0
U pthread_mutexattr_settype@@GLIBC_2.1
U pthread_mutex_destroy@@GLIBC_2.0
U pthread_mutex_init@@GLIBC_2.0
U pthread_mutex_lock@@GLIBC_2.0
U pthread_mutex_trylock@@GLIBC_2.0
U pthread_mutex_unlock@@GLIBC_2.0
w pthread_once@@GLIBC_2.0
U pthread_self@@GLIBC_2.0
U pthread_yield@@GLIBC_2.2
T PublishAll
T PublishAllMiniProfilers
U rand@@GLIBC_2.0
U readdir@@GLIBC_2.0
t read_encoded_value
t read_encoded_value_with_base
t read_sleb128
t read_sleb128
t read_uleb128
t read_uleb128
U realloc@@GLIBC_2.0
U realpath@@GLIBC_2.3
t __register_frame
t __register_frame_info
t __register_frame_info_bases
t __register_frame_info_table
t __register_frame_info_table_bases
t __register_frame_table
T ReleaseThreadHandle
U rename@@GLIBC_2.0
T ReportProgress
U rmdir@@GLIBC_2.0
T RunTSListTests
T RunTSQueueTests
U scandir@@GLIBC_2.0
t search_object
b seen_objects
T SetAllAssertsDisabled
t set_fast_math
T SetStackTranslationSymbolSearchPath
T SetThreadedLoadLibraryFunc
T ShouldUseNewAssertDialog
T ShutdownPME
t size_of_encoded_value
U snprintf@@GLIBC_2.0
U srand@@GLIBC_2.0
U sscanf@@GLIBC_2.0
T StackToolsNotify_LoadedLibrary
t stat
t __stat
U stderr@@GLIBC_2.0
U strcasecmp@@GLIBC_2.0
U strcasestr@@GLIBC_2.1
U strcat@@GLIBC_2.0
U strchr@@GLIBC_2.0
U strcmp@@GLIBC_2.0
U strcpy@@GLIBC_2.0
U strdup@@GLIBC_2.0
U strlen@@GLIBC_2.0
U strncasecmp@@GLIBC_2.0
U strncat@@GLIBC_2.0
U strncpy@@GLIBC_2.0
U strpbrk@@GLIBC_2.0
U strstr@@GLIBC_2.0
U strtod@@GLIBC_2.0
U strtol@@GLIBC_2.0
b subs.7231
U symlink@@GLIBC_2.0
b terminator.7074
T ThreadGetCurrentHandle
T ThreadGetCurrentId
T ThreadGetPriority
T ThreadInMainThread
T ThreadInterlockedAssignIf64
T ThreadInterlockedCompareExchange64
T ThreadInterlockedExchange64
T ThreadJoin
T ThreadSetAffinity
T ThreadSetDebugName
T ThreadSetPriority
T ThreadSleep
U time@@GLIBC_2.0
U timegm@@GLIBC_2.0
U __timezone@@GLIBC_2.0
U timezone@@GLIBC_2.0
U ___tls_get_addr@@GLIBC_2.3
U tolower@@GLIBC_2.0
T TranslateStackInfo
t __udivdi3
t __umoddi3
T UnitTestCount
T UnitTestInstallTestCase
U unlink@@GLIBC_2.0
b unseen_objects
t _Unwind_Backtrace
t _Unwind_DebugHook
t _Unwind_DeleteException
t _Unwind_FindEnclosingFunction
t _Unwind_Find_FDE
t _Unwind_ForcedUnwind
t _Unwind_ForcedUnwind_Phase2
t _Unwind_GetCFA
t _Unwind_GetDataRelBase
t _Unwind_GetGR
t _Unwind_GetIP
t _Unwind_GetIPInfo
t _Unwind_GetLanguageSpecificData
t _Unwind_GetRegionStart
t _Unwind_GetTextRelBase
t _Unwind_IteratePhdrCallback
t _Unwind_RaiseException
t _Unwind_RaiseException_Phase2
t _Unwind_Resume
t _Unwind_Resume_or_Rethrow
t _Unwind_SetGR
t _Unwind_SetIP
t _Unwind_SetSpColumn
U usleep@@GLIBC_2.0
U utime@@GLIBC_2.0
U utimes@@GLIBC_2.0
t uw_frame_state_for
t uw_init_context_1
t uw_install_context_1
t uw_update_context
t uw_update_context_1
b VmmMsgFlag
T VoidFnPtrLookup_Tier0
U vsnprintf@@GLIBC_2.0
t V_tier0_stricmp
T vtune
T Warning
T _Warning_AlwaysSpewCallStack_Enable
T _Warning_AlwaysSpewCallStack_Length
T Warning_SpewCallStack
t __wrap_access
t __wrap_chmod
t __wrap_chown
t __wrap_creat
t __wrap_fopen
t __wrap_fopen64
t __wrap_freopen
t __wrap_lchown
t __wrap_link
t __wrap_lstat
t __wrap___lxstat
t __wrap___lxstat64
t __wrap_mkdir
t __wrap_mkfifo
t __wrap_mknod
t __wrap_mount
t __wrap_open
t __wrap_open64
t __wrap_opendir
t __wrap_realpath
t __wrap_rename
t __wrap_rmdir
t __wrap_scandir
t __wrap_stat
t __wrap_symlink
t __wrap_unlink
t __wrap_utime
t __wrap_utimes
t __wrap___xstat
t __wrap___xstat64
T WriteMiniDump
U __xmknod@@GLIBC_2.0
U __xstat64@@GLIBC_2.2
U __xstat@@GLIBC_2.0
T DevWarning(char const*, ...)
t Plat_ctime(long const*, char*, unsigned int)
T ConColorMsg(Color const&, char const*, ...)
t CalcHeapUsed()
t Plat_asctime(tm const*, char*, unsigned int)
t InitMainThread()
t Plat_localtime(long const*, tm*)
t RunSharedTests(int)
t JoinTestThreads(ThreadHandle_t__**)
t Platform_gmtime(long const*, tm*)
t CalculateCPUFreq()
t CreateTestThreads(unsigned int (*)(void*), int, int)
T LoggingSystem_Log(int, LoggingSeverity_t, Color, char const*, ...)
t GetCPUFreqFromPROC()
t CheckSSE3Technology()
t IgnoreAssertsNearby(int)
t ReserveBottomMemory()
t CheckSSE41Technology()
t CheckSSE42Technology()
t CheckSSE4aTechnology()
t CheckSSSE3Technology()
t GetProcessorVendorId()
t CreateNewAssertDisable(char const*)
t GetGlobalLoggingSystem()
t PreloadStackInformation(void const**, int)
t LogicalProcessorsPerCore()
t ThreadInterlockedAssignIf(long volatile*, long, long)
t ThreadInterlockedExchange(long volatile*, long)
t GetMemorySectionForAddress(void*)
t IgnoreAssertsInCurrentFile()
t ThreadInterlockedDecrement(long volatile*)
t ThreadInterlockedIncrement(long volatile*)
t AppendCallStackToLogMessage(char*, int, int)
t DoApplyMemoryInitializations(void*, int)
t ThreadInterlockedExchangeAdd(long volatile*, long)
t VirtualMemoryManager_Shutdown()
t GetGlobalLoggingSystem_Internal()
t ThreadInterlockedCompareExchange(long volatile*, long, long)
t __static_initialization_and_destruction_0(int, int) [clone .constprop.5]
t VirtualMemoryManager_AllocateVirtualMemorySection(unsigned int)
T ConMsg(char const*, ...)
T DevMsg(char const*, ...)
t InitTime(timeval&)
t pathmatch(char const*, char**, bool, char*, unsigned int)
U operator delete[](void*)@@GLIBCXX_3.4
U operator delete(void*)@@GLIBCXX_3.4
T ZeroMemory
b guard variable for DoNewAssertDialog::autoMutex__
b guard variable for ShouldUseNewAssertDialog::bMPIWorker
b guard variable for GetGlobalLoggingSystem_Internal()::globalLoggingSystem
b guard variable for pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
b guard variable for AssertStack()::bResult
b guard variable for AllAssertOnce()::bResult
b guard variable for AreAssertsDisabled()::bResult
b guard variable for IsDebugBreakEnabled()::bResult
b guard variable for CSharedLibraryCache::GetCache()::Singleton
t DumpSorted(char const*, double, bool (*)(TimeSums_t const&, TimeSums_t const&), int)
t PeakCompare(TimeSums_t const&, TimeSums_t const&)
b s_bShowDiag
d s_nBufDepth
b s_TestCount
t TimeCompare(TimeSums_t const&, TimeSums_t const&)
b s_bInittedWD
r g_ColorLookup
b s_nBufCurSize
b s_ppTestCases
b s_StdMemAlloc
t DefaultWaitFunc(unsigned int, CThreadEvent**, int, unsigned int)
b s_nBufAllocSize
b s_TestAllocated
b s_ThreadIDMutex
b g_bBenchmarkMode
b g_LocalTimeMutex
b pReportHandlerFN
b s_cpuInformation
b s_pBufStackDepth
d g_bAssertsEnabled
b g_pAssertDisables
t ThreadProcConvert(void*)
t AverageTimeCompare(TimeSums_t const&, TimeSums_t const&)
b g_FakeBenchmarkTime
b s_bThreadIDAllocated
t PeakOverAverageCompare(TimeSums_t const&, TimeSums_t const&)
t TimeLessChildrenCompare(TimeSums_t const&, TimeSums_t const&)
t Register_LOG_CONSOLE_Tags()
b s_nWatchDogTimerTimeScale
b s_ThreadedLoadLibraryFunc
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
b UNSPECIFIED_LOGGING_COLOR
t Register_LOG_DEVELOPER_Tags()
t AverageTimeLessChildrenCompare(TimeSums_t const&, TimeSums_t const&)
t Register_LOG_DEVELOPER_CONSOLE_Tags()
t Register_LOG_DEVELOPER_VERBOSE_Tags()
b g_Info
b s_pBuf
t Descend(char*, unsigned int, bool, unsigned int)
b g_atoms
b secbase
b g_bBreak
b g_CmdLine
b g_CmdLine
T CTestSuite::AddTest(ITestCase*)
T CTestSuite::GetName()
T CTestSuite::RunTest()
T CTestSuite::CTestSuite(char const*, ITestSuite*)
T CTestSuite::CTestSuite(char const*, ITestSuite*)
T CTestSuite::~CTestSuite()
T CTestSuite::~CTestSuite()
T CVProfNode::EnterScope()
T CVProfNode::GetSubNode(char const*, int, char const*)
T CVProfNode::GetSubNode(char const*, int, char const*, int)
T CVProfNode::SetCurFrameTime(unsigned long)
B CVProfNode::s_iCurrentUniqueNodeID
T CVProfNode::Pause()
T CVProfNode::Reset()
T CVProfNode::Resume()
T CVProfNode::ExitScope()
T CVProfNode::MarkFrame()
T CVProfNode::ResetPeak()
T CVProfNode::~CVProfNode()
T CVProfNode::~CVProfNode()
t CTSListBase::CTSListBase()
t CTSListBase::CTSListBase()
t CTSListBase::~CTSListBase()
t CTSListBase::~CTSListBase()
b TSListTests::g_nThreads
b TSListTests::g_pTestOps
d TSListTests::g_QueueOps
b TSListTests::g_TestList
b TSListTests::g_pListType
b TSListTests::g_TestQueue
d TSListTests::MAX_THREADS
t TSListTests::MTPushMTPop(bool)
t TSListTests::MTPushSTPop(bool)
b TSListTests::NUM_THREADS
t TSListTests::PushPopTest()
t TSListTests::STPushMTPop(bool)
t TSListTests::ClearBuckets()
t TSListTests::MTPushSeqPop(bool)
t TSListTests::SeqPushMTPop(bool)
b TSListTests::g_nPopThreads
t TSListTests::PopThreadFunc(void*)
b TSListTests::g_nPushThreads
b TSListTests::g_pTestBuckets
d TSListTests::NUM_PROCESSORS
t TSListTests::PushThreadFunc(void*)
b TSListTests::g_ThreadHandles
t TSListTests::ValidateBuckets()
t TSListTests::PushPopInterleavedTest()
t TSListTests::MTPushPopPopInterleaved(bool)
t TSListTests::PushPopInterleavedTestGuts()
t TSListTests::PushPopInterleavedTestThreadFunc(void*)
b TSListTests::idx
b TSListTests::g_Test
b TSListTests::g_nodes
b TSListTests::g_nPops
t TSListTests::TestEnd(bool)
t TSListTests::CListOps::Pop(int*)
t TSListTests::CListOps::Push(int)
t TSListTests::CListOps::IsEmpty()
t TSListTests::CListOps::Validate()
b TSListTests::g_bStart
d TSListTests::NUM_TEST
t TSListTests::TestWait()
t TSListTests::CQueueOps::Pop(int*)
t TSListTests::CQueueOps::Push(int)
t TSListTests::CQueueOps::IsEmpty()
t TSListTests::CQueueOps::Validate()
t TSListTests::DecBucket(int)
d TSListTests::g_ListOps
b TSListTests::g_nPushes
b TSListTests::g_nTested
t TSListTests::IncBucket(int)
t TSListTests::TestStart()
t CCommandLine::AppendParm(char const*, char const*)
t CCommandLine::RemoveParm(char const*)
t CCommandLine::AddArgument(char const*, char const*)
t CCommandLine::CleanUpParms()
t CCommandLine::CreateCmdLine(int, char**)
t CCommandLine::CreateCmdLine(char const*)
t CCommandLine::ParseCommandLine()
t CCommandLine::LoadParametersFromFile(char const*&, char*&, int, bool)
t CCommandLine::SetParm(int, char const*)
t CCommandLine::CCommandLine()
t CCommandLine::CCommandLine()
t CCommandLine::~CCommandLine()
t CCommandLine::~CCommandLine()
t CCommandLine::~CCommandLine()
t CStdMemAlloc::GetVersion()
t CStdMemAlloc::CompactHeap()
t CStdMemAlloc::IsDebugHeap()
t CStdMemAlloc::CrtDbgReport(int, char const*, int, char const*, char const*)
t CStdMemAlloc::CrtSetDbgFlag(int)
t CStdMemAlloc::InitDebugInfo(void*, char const*, int)
t CStdMemAlloc::SaveDebugInfo(void*)
t CStdMemAlloc::CrtCheckMemory()
t CStdMemAlloc::DumpBlockStats(void*)
t CStdMemAlloc::PopAllocDbgInfo()
t CStdMemAlloc::CrtMemCheckpoint(_CrtMemState*)
t CStdMemAlloc::CrtSetBreakAlloc(long)
t CStdMemAlloc::CrtSetReportFile(int, void*)
t CStdMemAlloc::CrtSetReportHook(void*)
t CStdMemAlloc::CrtSetReportMode(int, int)
t CStdMemAlloc::GetActualDbgInfo(char const*&, int&)
t CStdMemAlloc::GetDebugInfoSize()
t CStdMemAlloc::PushAllocDbgInfo(char const*, int)
t CStdMemAlloc::RestoreDebugInfo(void const*)
t CStdMemAlloc::CrtIsValidPointer(void const*, unsigned int, int)
t CStdMemAlloc::DumpStatsFileBase(char const*)
t CStdMemAlloc::MemoryAllocFailed()
t CStdMemAlloc::SetCRTAllocFailed(unsigned int)
t CStdMemAlloc::DefaultFailHandler(unsigned int)
t CStdMemAlloc::GlobalMemoryStatus(unsigned int*, unsigned int*)
t CStdMemAlloc::RegisterAllocation(char const*, int, int, int, unsigned int)
t CStdMemAlloc::SetAllocFailHandler(unsigned int (*)(unsigned int))
t CStdMemAlloc::RegisterDeallocation(char const*, int, int, int, unsigned int)
t CStdMemAlloc::CrtIsValidHeapPointer(void const*)
t CStdMemAlloc::Expand_NoLongerSupported(void*, unsigned int)
t CStdMemAlloc::Expand_NoLongerSupported(void*, unsigned int, char const*, int)
t CStdMemAlloc::Free(void*)
t CStdMemAlloc::Free(void*, char const*, int)
t CStdMemAlloc::Alloc(unsigned int)
t CStdMemAlloc::Alloc(unsigned int, char const*, int)
t CStdMemAlloc::GetSize(void*)
t CStdMemAlloc::heapchk()
t CStdMemAlloc::Realloc(void*, unsigned int)
t CStdMemAlloc::Realloc(void*, unsigned int, char const*, int)
t CStdMemAlloc::DumpStats()
T CThreadEvent::WaitForMultiple(int, CThreadEvent**, bool, unsigned int)
T CThreadEvent::WaitForMultiple(int, CThreadEvent*, bool, unsigned int)
T CThreadEvent::Set()
T CThreadEvent::Wait(unsigned int)
T CThreadEvent::Check()
T CThreadEvent::Reset()
T CThreadEvent::CThreadEvent(bool)
T CThreadEvent::CThreadEvent(bool)
T CThreadMutex::TryLock()
W CThreadMutex::~CThreadMutex()
W CThreadMutex::~CThreadMutex()
T CThreadRWLock::UnlockWrite()
T CThreadRWLock::WaitForRead()
T CThreadRWLock::LockForWrite()
T CWorkerThread::CallMaster(unsigned int, unsigned int)
T CWorkerThread::CallWorker(unsigned int, unsigned int, bool)
T CWorkerThread::WaitForCall(unsigned int, unsigned int*)
T CWorkerThread::WaitForCall(unsigned int*)
T CWorkerThread::WaitForReply(unsigned int)
T CWorkerThread::WaitForReply(unsigned int, unsigned int (*)(unsigned int, CThreadEvent**, int, unsigned int))
T CWorkerThread::BoostPriority()
T CWorkerThread::GetCallHandle()
T CWorkerThread::Call(unsigned int, unsigned int, bool, unsigned int (*)(unsigned int, CThreadEvent**, int, unsigned int))
T CWorkerThread::Reply(unsigned int)
T CWorkerThread::PeekCall(unsigned int*)
T CWorkerThread::CWorkerThread()
T CWorkerThread::CWorkerThread()
W CWorkerThread::~CWorkerThread()
W CWorkerThread::~CWorkerThread()
W CWorkerThread::~CWorkerThread()
t CLoggingSystem::GetChannel(int)
t CLoggingSystem::GetCurrentState()
t CLoggingSystem::PopLoggingState(bool)
t CLoggingSystem::PushLoggingState(bool, bool)
t CLoggingSystem::SetGlobalSpewLevel(LoggingSeverity_t)
t CLoggingSystem::SetChannelSpewLevel(int, LoggingSeverity_t)
t CLoggingSystem::FindUnusedStateIndex()
t CLoggingSystem::IsListenerRegistered(ILoggingListener*)
t CLoggingSystem::AddTagToCurrentChannel(char const*)
t CLoggingSystem::RegisterLoggingChannel(char const*, void (*)(), int, LoggingSeverity_t, Color)
t CLoggingSystem::RegisterLoggingListener(ILoggingListener*)
t CLoggingSystem::ResetCurrentLoggingState()
t CLoggingSystem::SetChannelSpewLevelByTag(char const*, LoggingSeverity_t)
t CLoggingSystem::SetLoggingResponsePolicy(ILoggingResponsePolicy*)
t CLoggingSystem::SetChannelSpewLevelByName(char const*, LoggingSeverity_t)
t CLoggingSystem::AllocTag(char const*)
t CLoggingSystem::LogDirect(int, LoggingSeverity_t, Color, char const*)
t CLoggingSystem::CLoggingSystem()
t CLoggingSystem::CLoggingSystem()
t CLoggingSystem::~CLoggingSystem()
t CLoggingSystem::~CLoggingSystem()
t CClockSpeedInit::Init()
T CCallStackStorage::CCallStackStorage(int (*)(void**, int, int), unsigned int)
T CCallStackStorage::CCallStackStorage(int (*)(void**, int, int), unsigned int)
T CThreadSpinRWLock::SpinLockForRead()
T CThreadSpinRWLock::SpinLockForWrite()
T CThreadSyncObject::AssertUseable()
T CThreadSyncObject::WaitForMultiple(int, CThreadSyncObject**, bool, unsigned int)
T CThreadSyncObject::WaitForMultiple(int, CThreadSyncObject*, bool, unsigned int)
T CThreadSyncObject::Wait(unsigned int)
T CThreadSyncObject::CThreadSyncObject()
T CThreadSyncObject::CThreadSyncObject()
T CThreadSyncObject::~CThreadSyncObject()
T CThreadSyncObject::~CThreadSyncObject()
t CLinkedMiniProfiler::PurgeHistory()
t CLinkedMiniProfiler::Publish(unsigned int)
t CSharedLibraryCache::CSharedLibraryItem::~CSharedLibraryItem()
t CSharedLibraryCache::CSharedLibraryItem::~CSharedLibraryItem()
t CSharedLibraryCache::~CSharedLibraryCache()
t CSharedLibraryCache::~CSharedLibraryCache()
t CSimpleLoggingListener::Log(LoggingContext_t const*, char const*)
T BasicStatStructFieldDesc::DescribeField(unsigned char*, unsigned int)
T CStackTop_CopyParentStack::CStackTop_CopyParentStack(void* const*, int)
T CStackTop_CopyParentStack::CStackTop_CopyParentStack(void* const*, int)
T CStackTop_CopyParentStack::~CStackTop_CopyParentStack()
T CStackTop_CopyParentStack::~CStackTop_CopyParentStack()
t CDefaultLoggingResponsePolicy::OnLog(LoggingContext_t const*)
T CStackTop_ReferenceParentStack::ReleaseParentStackReferences()
T CStackTop_ReferenceParentStack::CStackTop_ReferenceParentStack(void* const*, int)
T CStackTop_ReferenceParentStack::CStackTop_ReferenceParentStack(void* const*, int)
T CStackTop_ReferenceParentStack::~CStackTop_ReferenceParentStack()
T CStackTop_ReferenceParentStack::~CStackTop_ReferenceParentStack()
t CWrap::~CWrap() [clone .constprop.2]
T CThread::ThreadProc(void*)
T CThread::SetPriority(int)
T CThread::GetThreadProc()
T CThread::GetThreadHandle()
T CThread::GetCurrentCThread()
T CThread::WaitForCreateComplete(CThreadEvent*)
T CThread::Init()
T CThread::Join(unsigned int)
T CThread::Stop(int)
T CThread::Sleep(unsigned int)
T CThread::Start(unsigned int, CThread::ThreadPriorityEnum_t)
T CThread::Yield()
T CThread::OnExit()
T CThread::Resume()
T CThread::GetName()
T CThread::IsAlive()
T CThread::SetName(char const*)
T CThread::Suspend()
T CThread::GetResult()
T CThread::Terminate(int)
T CThread::CThread()
T CThread::CThread()
T CThread::~CThread()
T CThread::~CThread()
T CThread::~CThread()
t CTSList<int>::~CTSList()
t CTSList<int>::~CTSList()
t CL2Cache::End()
t CL2Cache::Start()
t CL2Cache::CL2Cache()
t CL2Cache::CL2Cache()
t CL2Cache::~CL2Cache()
t CL2Cache::~CL2Cache()
t CTSQueue<int, true>::~CTSQueue()
t CTSQueue<int, true>::~CTSQueue()
T CTestCase::GetName()
T CTestCase::CTestCase(char const*, ITestSuite*)
T CTestCase::CTestCase(char const*, ITestSuite*)
T CTestCase::~CTestCase()
T CTestCase::~CTestCase()
T CVProfile::FreeNodes_R(CVProfNode*)
T CVProfile::OutputReport(int, char const*, int)
T CVProfile::ResetCounters(CounterGroup_t)
T CVProfile::HideBudgetGroup(int, bool)
T CVProfile::AddBudgetGroupName(char const*, int)
T CVProfile::GetNumBudgetGroups()
T CVProfile::FindBudgetGroupName(char const*)
T CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)
T CVProfile::GetBudgetGroupColor(int, int&, int&, int&, int&)
T CVProfile::BudgetGroupNameToBudgetGroupID(char const*)
T CVProfile::BudgetGroupNameToBudgetGroupID(char const*, int)
T CVProfile::RegisterNumBudgetGroupsChangedCallBack(void (*)())
T CVProfile::Term()
T CVProfile::FindNode(CVProfNode*, char const*)
T CVProfile::SumTimes(CVProfNode*, int)
T CVProfile::SumTimes(char const*, int)
T CVProfile::DumpNodes(CVProfNode*, int, bool)
T CVProfile::CVProfile()
T CVProfile::CVProfile()
T CVProfile::~CVProfile()
T CVProfile::~CVProfile()
U operator new[](unsigned int)@@GLIBCXX_3.4
t CCommandLine::GetCmdLine() const
t CCommandLine::GetParm(int) const
t CCommandLine::FindParm(char const*) const
t CCommandLine::CheckParm(char const*, char const**) const
t CCommandLine::ParmCount() const
t CCommandLine::ParmValue(char const*, float) const
t CCommandLine::ParmValue(char const*, int) const
t CCommandLine::ParmValue(char const*, char const*) const
T CWorkerThread::GetCallParam() const
t CLoggingSystem::GetChannel(int) const
t CLoggingSystem::FindChannel(char const*) const
t CLoggingSystem::GetCurrentState() const
T CThreadSyncObject::operator!() const
T CThread::GetPriority() const
T CVProfile::GetCounterName(int) const
T CVProfile::GetNumCounters() const
T CVProfile::GetCounterGroup(int) const
T CVProfile::GetCounterValue(int) const
T CVProfile::GetCounterNameAndValue(int, int&) const
t std::map<CVProfNode*, double, std::less<CVProfNode*>, std::allocator<std::pair<CVProfNode* const, double> > >::~map()
t std::map<CVProfNode*, double, std::less<CVProfNode*>, std::allocator<std::pair<CVProfNode* const, double> > >::~map()
t std::map<char const*, unsigned int, std::less<char const*>, std::allocator<std::pair<char const* const, unsigned int> > >::~map()
t std::map<char const*, unsigned int, std::less<char const*>, std::allocator<std::pair<char const* const, unsigned int> > >::~map()
t std::list<ThreadHandle_t__*, std::allocator<ThreadHandle_t__*> >::~list()
t std::list<ThreadHandle_t__*, std::allocator<ThreadHandle_t__*> >::~list()
t void std::vector<TimeSums_t, std::allocator<TimeSums_t> >::_M_insert_aux<TimeSums_t const&>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, TimeSums_t const&)
t std::vector<TimeSums_t, std::allocator<TimeSums_t> >::operator=(std::vector<TimeSums_t, std::allocator<TimeSums_t> > const&)
t std::vector<TimeSums_t, std::allocator<TimeSums_t> >::~vector()
t std::vector<TimeSums_t, std::allocator<TimeSums_t> >::~vector()
U std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)@@GLIBCXX_3.4.15
U std::__detail::_List_node_base::_M_unhook()@@GLIBCXX_3.4.15
t std::_Rb_tree_iterator<std::pair<CVProfNode* const, double> > std::_Rb_tree<CVProfNode*, std::pair<CVProfNode* const, double>, std::_Select1st<std::pair<CVProfNode* const, double> >, std::less<CVProfNode*>, std::allocator<std::pair<CVProfNode* const, double> > >::_M_insert_<std::pair<CVProfNode*, double> >(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<CVProfNode*, double>&&)
t std::pair<std::_Rb_tree_iterator<std::pair<CVProfNode* const, double> >, bool> std::_Rb_tree<CVProfNode*, std::pair<CVProfNode* const, double>, std::_Select1st<std::pair<CVProfNode* const, double> >, std::less<CVProfNode*>, std::allocator<std::pair<CVProfNode* const, double> > >::_M_insert_unique<std::pair<CVProfNode*, double> >(std::pair<CVProfNode*, double>&&)
t std::_Rb_tree<CVProfNode*, std::pair<CVProfNode* const, double>, std::_Select1st<std::pair<CVProfNode* const, double> >, std::less<CVProfNode*>, std::allocator<std::pair<CVProfNode* const, double> > >::_M_erase(std::_Rb_tree_node<std::pair<CVProfNode* const, double> >*)
t std::_Rb_tree_iterator<std::pair<char const* const, unsigned int> > std::_Rb_tree<char const*, std::pair<char const* const, unsigned int>, std::_Select1st<std::pair<char const* const, unsigned int> >, std::less<char const*>, std::allocator<std::pair<char const* const, unsigned int> > >::_M_insert_<std::pair<char const*, unsigned int> >(std::_Rb_tree_node_base const*, std::_Rb_tree_node_base const*, std::pair<char const*, unsigned int>&&)
t std::pair<std::_Rb_tree_iterator<std::pair<char const* const, unsigned int> >, bool> std::_Rb_tree<char const*, std::pair<char const* const, unsigned int>, std::_Select1st<std::pair<char const* const, unsigned int> >, std::less<char const*>, std::allocator<std::pair<char const* const, unsigned int> > >::_M_insert_unique<std::pair<char const*, unsigned int> >(std::pair<char const*, unsigned int>&&)
t std::_Rb_tree<char const*, std::pair<char const* const, unsigned int>, std::_Select1st<std::pair<char const* const, unsigned int> >, std::less<char const*>, std::allocator<std::pair<char const* const, unsigned int> > >::_M_erase(std::_Rb_tree_node<std::pair<char const* const, unsigned int> >*)
T CThreadFastMutex::Lock(unsigned int, unsigned int) volatile
U operator new(unsigned int)@@GLIBCXX_3.4
t void std::__pop_heap<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, __gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, __gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&))
t void std::__push_heap<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, int, TimeSums_t, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, int, int, TimeSums_t, bool (*)(TimeSums_t const&, TimeSums_t const&))
t void std::__adjust_heap<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, int, TimeSums_t, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, int, int, TimeSums_t, bool (*)(TimeSums_t const&, TimeSums_t const&))
t void std::__insertion_sort<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, __gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&))
t void std::__introsort_loop<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, int, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, __gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, int, bool (*)(TimeSums_t const&, TimeSums_t const&))
U std::__throw_bad_alloc()@@GLIBCXX_3.4
U std::_Rb_tree_decrement(std::_Rb_tree_node_base*)@@GLIBCXX_3.4
t void std::__move_median_first<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, __gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, __gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&))
t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&))
U std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&)@@GLIBCXX_3.4
t void std::make_heap<__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&)>(__gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, __gnu_cxx::__normal_iterator<TimeSums_t*, std::vector<TimeSums_t, std::allocator<TimeSums_t> > >, bool (*)(TimeSums_t const&, TimeSums_t const&))
V typeinfo for CTestSuite
d typeinfo for ITestSuite
d typeinfo for CCommandLine
d typeinfo for CStdMemAlloc
d typeinfo for ICommandLine
V typeinfo for CWorkerThread
d typeinfo for ILoggingListener
d typeinfo for CSimpleLoggingListener
d typeinfo for ILoggingResponsePolicy
V typeinfo for BasicStatStructFieldDesc
V typeinfo for CallStackStatStructDescFuncs
d typeinfo for CDefaultLoggingResponsePolicy
V typeinfo for CThread
V typeinfo for CTestCase
d typeinfo for IMemAlloc
d typeinfo for ITestCase
U typeinfo for int@@CXXABI_1.3
d typeinfo for TSListTests::CListOps
d typeinfo for TSListTests::CTestOps
d typeinfo for TSListTests::CQueueOps
V typeinfo name for CTestSuite
r typeinfo name for ITestSuite
r typeinfo name for CCommandLine
r typeinfo name for CStdMemAlloc
r typeinfo name for ICommandLine
V typeinfo name for CWorkerThread
r typeinfo name for ILoggingListener
r typeinfo name for CSimpleLoggingListener
r typeinfo name for ILoggingResponsePolicy
V typeinfo name for BasicStatStructFieldDesc
V typeinfo name for CallStackStatStructDescFuncs
r typeinfo name for CDefaultLoggingResponsePolicy
V typeinfo name for CThread
V typeinfo name for CTestCase
r typeinfo name for IMemAlloc
r typeinfo name for ITestCase
r typeinfo name for TSListTests::CListOps
r typeinfo name for TSListTests::CTestOps
r typeinfo name for TSListTests::CQueueOps
V vtable for CTestSuite
d vtable for ITestSuite
d vtable for CCommandLine
d vtable for CStdMemAlloc
d vtable for ICommandLine
V vtable for CWorkerThread
d vtable for ILoggingListener
d vtable for CSimpleLoggingListener
V vtable for BasicStatStructFieldDesc
d vtable for CDefaultLoggingResponsePolicy
V vtable for CThread
V vtable for CTestCase
d vtable for IMemAlloc
d vtable for ITestCase
U vtable for __cxxabiv1::__class_type_info@@CXXABI_1.3
U vtable for __cxxabiv1::__si_class_type_info@@CXXABI_1.3
d vtable for TSListTests::CListOps
d vtable for TSListTests::CQueueOps
b Plat_MSTime::secbase
b DoNewAssertDialog::autoMutex__
b COM_TimestampedLog::s_bChecked
b COM_TimestampedLog::s_LastStamp
b COM_TimestampedLog::s_bShouldLog
b COM_TimestampedLog::s_bFirstWrite
b COM_TimestampedLog::s_bShouldLogToETW
b COM_TimestampedLog::s_bShouldLogToConsole
b GetProcessorVendorId()::VendorID
b ShouldUseNewAssertDialog::bMPIWorker
b GetGlobalLoggingSystem_Internal()::globalLoggingSystem
b pathmatch(char const*, char**, bool, char*, unsigned int)::s_pszDbgPathMatch
b AssertStack()::bResult
b AllAssertOnce()::bResult
b AreAssertsDisabled()::bResult
b IsDebugBreakEnabled()::bResult
b CSharedLibraryCache::GetCache()::Singleton
b CVProfile::FindOrCreateCounter(char const*, CounterGroup_t)::dummy
